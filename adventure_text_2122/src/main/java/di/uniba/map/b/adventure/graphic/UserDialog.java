/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package di.uniba.map.b.adventure.graphic;

import di.uniba.map.b.adventure.Engine;
import di.uniba.map.b.adventure.type.User;
import di.uniba.map.b.adventure.games.EscapeGame;
import di.uniba.map.b.adventure.database.Database;
import javax.swing.JOptionPane;


/**
 * @author federico
 * @author gianvito
 * @author sandro
 */

public class UserDialog extends javax.swing.JDialog {

    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private User person = null;
   
     /**
     * Creates new form PersonDialog
     * @param parent
     * @param modal
     */
    
    public UserDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    /**
     *
     * @return person
     */
    
    public User getPerson() {
        return person;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inserisci dati");

        jLabel1.setText("Nickname:");

        jLabel2.setText("Eta':");

        jTextField1.setColumns(20);

        jTextField2.setColumns(20);

        jButton1.setText("Invio");
        jButton1.addActionListener((java.awt.event.ActionEvent evt) -> {
            jButton1ActionPerformed(evt);
        });

        jButton2.setText("Cancella");
        jButton2.addActionListener((java.awt.event.ActionEvent evt) -> {
            jButton2ActionPerformed(evt);
        });
        
        jButton3.setText("Indietro");
        jButton3.addActionListener((java.awt.event.ActionEvent evt) -> {
            jButton3ActionPerformed(evt);
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(46, 46, 46)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        person = null;
    }//GEN-LAST:event_jButton2ActionPerformed
    
    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean lengthShorter = false;
        boolean ageWrong = false;
        boolean ageLonger = false;
        boolean underage = false;
        
        String nick = "";
        int age = 0;
        
        nick = jTextField1.getText(); 
        try {              
            age = Integer.parseInt(jTextField2.getText()); 
        }
        catch(NumberFormatException e){
            ageWrong = true;               
        }
        
        User u = new User(nick, age);
        lengthShorter = u.checkNickShorter(nick);
        ageLonger = u.checkAgeLonger(age);
        underage = u.checkUnderage(age);
        
        
        if(!lengthShorter && !ageWrong && !underage && !ageLonger) {
            Database db = new Database(); 
            db.checkNick(jTextField1.getText().toLowerCase());
            
            if(!db.existingNick) {
                JOptionPane.showMessageDialog(this,"Nickname ed età impostati correttamente!");
                db.setHistorian(nick, age); 
                this.setVisible(false);
                
                Engine engine = new Engine(new EscapeGame());
                engine.begin();
                engine.execute(); 
            }
            else {
                JOptionPane.showMessageDialog(this,"Il nickname inserito è già presente nel database, riprova!","Attenzione",JOptionPane.WARNING_MESSAGE);
                this.setVisible(true);
            }
        }
            
        if(lengthShorter && ageWrong) {
            JOptionPane.showMessageDialog(this,"L'età inserita è errata e il nickname deve essere lungo almeno 5 caratteri..","Attenzione",JOptionPane.WARNING_MESSAGE);
            this.setVisible(true);
        }
        
        else if(ageWrong) {
            JOptionPane.showMessageDialog(this,"L'età inserita non è valida, riprova.","Attenzione",JOptionPane.WARNING_MESSAGE);
            this.setVisible(true);     
        }
        
        else if(lengthShorter) {
            JOptionPane.showMessageDialog(this,"Il nickname deve essere lungo almeno 5 caratteri!","Attenzione",JOptionPane.WARNING_MESSAGE);
            this.setVisible(true);
        }
        
        else if(underage){
            JOptionPane.showMessageDialog(this,"Devi avere almeno 10 anni per giocarci, riprova tra qualche anno :)","Attenzione",JOptionPane.WARNING_MESSAGE);
            this.setVisible(true);
        }
        
        else if(ageLonger)
        {
            JOptionPane.showMessageDialog(this,"Se hai più di 100 anni non dovresti giocare, doveva venirti qualche anno fa l'idea di provare questo gioco ;)","Attenzione",JOptionPane.WARNING_MESSAGE);
            this.setVisible(true);
        }
    }
    
     private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
        Menu menu = new Menu();
        menu.setVisible(true);
    }
}
